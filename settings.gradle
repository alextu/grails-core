plugins {
    id "com.gradle.enterprise" version "3.8.1"
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.6.2'
}

gradleEnterprise {
    server = 'https://ge.solutions-team.gradle.com'
    buildScan {
        publishAlways()
        uploadInBackground = System.getenv("CI") == null
        capture {
            taskInputFiles = true
        }
    }
}
//exp 4 changes
buildCache {
    local { enabled = false }                     // must be false for this experiment
    remote(HttpBuildCache) {
        url = 'https://cache-node-solutions.grdev.net/cache/exp5-run4/'  // adjust to your GE hostname, and note the trailing slash
        allowUntrustedServer = true                 // set to false if a trusted certificate is configured for the GE server
        credentials { creds ->
            // inject credentials with read-write access to the remote build cache via env vars set in your CI environment
            creds.username = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER')
            creds.password = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY')
        }
        enabled = true                              // must be true for this experiment
        push = System.getenv("CI") == 'true'   // adjust to an env var that is always present only in your CI environment
    }
}

rootProject.name = "grails.core.ROOT"

include (
        'grails-bootstrap',
        'grails-codecs',
        'grails-console',
        'grails-core',
        'grails-databinding',
        'grails-docs',
        'grails-encoder',
        'grails-logging',
        'grails-shell',
        'grails-spring',
        'grails-test',
        'grails-web',
        'grails-web-common',
        'grails-web-boot',
        'grails-web-databinding',
        'grails-web-fileupload',
        'grails-web-mvc',
        'grails-web-url-mappings',

        // POM / BOMs
        'grails-dependencies',
        'grails-bom',

        // Plugins
        'grails-plugin-codecs',
        'grails-plugin-controllers',
        'grails-plugin-databinding',
        'grails-plugin-datasource',
        'grails-plugin-domain-class',
        'grails-plugin-interceptors',
        'grails-plugin-i18n',
        'grails-plugin-mimetypes',
        'grails-plugin-rest',
        'grails-plugin-services',
        'grails-plugin-url-mappings',
        'grails-plugin-validation',

        // Test Suite
        'grails-test-suite-base',
        'grails-test-suite-persistence',
        'grails-test-suite-uber',
        'grails-test-suite-web',

        // Gradle Plugin
        'grails-gradle-model'
)